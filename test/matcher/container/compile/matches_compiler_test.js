// Generated by LiveScript 1.2.0
(function(){
  var expect, matcher, container, fixtures, factories, MatchesCompiler;
  require('../../../test_setup');
  expect = require('chai').expect;
  matcher = require('../../../../index');
  container = matcher.container;
  fixtures = require('../../../fixtures');
  factories = require('../../../factories');
  MatchesCompiler = container.compiler.MatchesOnCompiler;
  describe('MatchesCompiler', function(){
    var validContext;
    before(function(){
      return validContext = {
        name: 'hello',
        matchesOn: {
          role: ['editor', 'admin'],
          action: ['read']
        }
      };
    });
    describe('create w invalid context', function(){
      return specify('throws', function(){
        return expect(function(){
          return new MatchesCompiler;
        }).to['throw'];
      });
    });
    describe('create w valid context', function(){
      return specify('throws', function(){
        return expect(function(){
          return new MatchesCompiler(validContext);
        }).to.not['throw'];
      });
    });
    return context('created w context', function(){
      var compiler, compiled;
      before(function(){
        return compiler = new MatchesCompiler(validContext, true);
      });
      return describe('compile type, match', function(){
        before(function(){
          return compiled = compiler.compile(validContext);
        });
        return specify('compiles', function(){
          return expect(compiled[0]).to.be.instanceOf(Function);
        });
      });
    });
  });
}).call(this);
